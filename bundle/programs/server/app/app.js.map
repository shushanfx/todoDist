{"version":3,"sources":["meteor://ğŸ’»app/imports/api/tasks.js","meteor://ğŸ’»app/server/main.js"],"names":["Meteor","Mongo","check","Tasks","Collection","methods","text","String","userId","Error","insert","createdAt","Date","owner","username","users","findOne","taskId","remove","setChecked","Boolean","update","$set","checked","startup"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAMC,QAAQ,IAAIF,MAAMG,UAAV,CAAqB,OAArB,CAAd;;AAEPJ,OAAOK,OAAP,CAAe;AACb,gBADa;AAAA,yBACEC,IADF,EACQ;AACnBJ,YAAMI,IAAN,EAAYC,MAAZ;;AAEA;AACA,UAAI,CAAE,KAAKC,MAAX,EAAmB;AACjB,cAAM,IAAIR,OAAOS,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDN,YAAMO,MAAN,CAAa;AACXJ,kBADW;AAEXK,mBAAW,IAAIC,IAAJ,EAFA;AAGXC,eAAO,KAAKL,MAHD;AAIXM,kBAAUd,OAAOe,KAAP,CAAaC,OAAb,CAAqB,KAAKR,MAA1B,EAAkCM;AAJjC,OAAb;AAMD;;AAfY;AAAA;AAgBb,gBAhBa;AAAA,yBAgBEG,MAhBF,EAgBU;AACrBf,YAAMe,MAAN,EAAcV,MAAd;;AAEAJ,YAAMe,MAAN,CAAaD,MAAb;AACD;;AApBY;AAAA;AAqBb,oBArBa;AAAA,6BAqBMA,MArBN,EAqBcE,UArBd,EAqB0B;AACrCjB,YAAMe,MAAN,EAAcV,MAAd;AACAL,YAAMiB,UAAN,EAAkBC,OAAlB;;AAEAjB,YAAMkB,MAAN,CAAaJ,MAAb,EAAqB,EAAEK,MAAM,EAAEC,SAASJ,UAAX,EAAR,EAArB;AACD;;AA1BY;AAAA;AAAA,CAAf,wH;;;;;;;;;;;ACNA,SAASnB,MAAT,QAAuB,eAAvB;AACA,OAAO,yBAAP;;AAEAA,OAAOwB,OAAP,CAAe,YAAM;AACnB;AACD,CAFD,wH","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n \r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nMeteor.methods({\r\n  'tasks.insert'(text) {\r\n    check(text, String);\r\n \r\n    // Make sure the user is logged in before inserting a task\r\n    if (! this.userId) {\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n \r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: this.userId,\r\n      username: Meteor.users.findOne(this.userId).username,\r\n    });\r\n  },\r\n  'tasks.remove'(taskId) {\r\n    check(taskId, String);\r\n \r\n    Tasks.remove(taskId);\r\n  },\r\n  'tasks.setChecked'(taskId, setChecked) {\r\n    check(taskId, String);\r\n    check(setChecked, Boolean);\r\n \r\n    Tasks.update(taskId, { $set: { checked: setChecked } });\r\n  },\r\n});","import { Meteor } from 'meteor/meteor';\nimport '../imports/api/tasks.js';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}